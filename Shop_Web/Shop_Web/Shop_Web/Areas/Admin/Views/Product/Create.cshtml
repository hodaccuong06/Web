@model Shop_Web.Database.Product

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}
<div class="create">
    <div class="quanly" style="text-align: center; font-size: 40px ; font-family:Cambria, Cochin, Georgia, Times, Times New Roman, serif">Tạo sản phẩm</div>

    @using (Html.BeginForm("Create", "Product", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-pull-0">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Avartar, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-pull-0">

                    @Html.EditorFor(model => model.Avartar, new { htmlAttributes = new { @class = "form-control", type = "file" } })

                    @Html.ValidationMessageFor(model => model.Avartar, "", new { @class = "text-danger" })



                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CategoryId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-pull-0">
                    <select name="CategoryId" class="form-control">
                        @foreach (var item in new Shop_Web.Database.ShopWebEntities().Categories.ToList())
                        {
                            <option value="@item.Id">@item.Name</option>
                        }
                    </select>
                    @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ShortDes, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-pull-0">
                    @Html.EditorFor(model => model.ShortDes, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ShortDes, "", new { @class = "text-danger" })
                </div>
            </div>



            <div class="form-group">
                @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-pull-0">
                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PriceDiscount, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-pull-0">
                    @Html.EditorFor(model => model.PriceDiscount, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PriceDiscount, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.TypeId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-pull-0">
                    @Html.EditorFor(model => model.TypeId, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TypeId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Slug, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-pull-0">
                    @Html.EditorFor(model => model.Slug, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Slug, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.BrandId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-pull-0">

                    <select name="BrandId" class="form-control">
                        @foreach (var item in new Shop_Web.Database.ShopWebEntities().Brands.ToList())
                        {
                            <option value="@item.Id">@item.Name</option>
                        }
                    </select>
                    @Html.ValidationMessageFor(model => model.BrandId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FullDescription, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-pull-0">

                    <textarea class="form-control" name="FullDescription" id="txtarea"></textarea>
                    @Html.ValidationMessageFor(model => model.FullDescription, "", new { @class = "text-danger" })
                </div>
            </div>

            <br />

            <div class="form-group">

                <div class="col-md-offset-5 col-md-10">
                    <button type="button" class="btn btn-outline-primary" data-mdb-ripple-color="dark">@Html.ActionLink("Back to List", "Index")</button>
                    <input type="submit" value="Create" class="btn btn-outline-success" />

                </div>
            </div>

        </div>
    }
    <br />
    <br />

</div>
<style>
    .create {
        margin-left: 50px;
        margin-right: 50px;
    }
</style>

@section scripts{
    <script>
        CKEDITOR.replace('txtarea')

    </script>
}

